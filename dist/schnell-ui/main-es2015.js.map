{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './services/http.service';\nimport * as _ from 'lodash';\nimport { CookieService } from 'ngx-cookie-service';\nimport { tokenize } from '@angular/compiler/src/ml_parser/lexer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'schnell-ui';\n\n  public Username = '';\n  public Password = '';\n  public Status = '';\n  public Message = '';\n\n  constructor(public httpService: HttpService, public cookieService: CookieService) {\n    this.httpService = httpService;\n    this.cookieService = cookieService;\n  }\n\n  ngOnInit(): void {\n    // todo: put in check for cookie so see if already logged in\n  }\n\n  gotoWebsite(): void {\n    const urlHack = 'http://onecause.com';\n    window.open(urlHack, '_top');\n  }\n\n  getToken(): string {\n    let token = '';\n    const date = new Date();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n    const newMin = min < 10 ? `0${min}` : `${min}`;\n    const newHour = hour < 10 ? `0${hour}` : `${hour}`;\n    token = `${newHour}${newMin}`;\n    return token\n  }\n\n  resetForm() {\n    this.Username = '';\n    this.Password = '';\n    this.Status = '';\n    this.Message = '';\n  }\n\n  authenticateUser(): void {\n    const data = {\n      Email: this.Username,\n      Password: this.Password,\n      Token: this.getToken()\n    };\n    this.httpService.sendPostRequest(data).subscribe((responseBody: any) => {\n      this.Status = _.get(responseBody, 'Status');\n      this.Message = _.get(responseBody, 'Message');\n      if (this.Status === 'success') {\n        this.cookieService.set('_uid', _.get(responseBody, 'SessionCookie'));\n        this.resetForm();\n        this.gotoWebsite();\n        return;\n      }\n    });\n  }\n\n}\n","\n<!-- Notes: More client-side validation of form elements would of been nice. -->\n<div class=\"content\" role=\"main\">\n  <div class=\"d-flex justify-content-md-center align-items-center vh-100\">\n    <div class=\"login-box shadow border rounded\">\n      <form class=\"p-3\">\n        <h5 class=\"text-center mt-2\">Login Schnell</h5>\n        <div class=\"form-group mt-5\">\n          <input type=\"username\" class=\"form-control\" id=\"Username\" name=\"Username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" [(ngModel)]='Username' [value]='Username'>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" class=\"form-control\" id=\"Password\" name=\"Password\" placeholder=\"Enter password\" [(ngModel)]='Password' [value]='Password' minlength=8>\n          <small id=\"passwordHelp\" class=\"form-text text-muted\">Must be 8 atleast characters</small>\n        </div>\n        <button class=\"btn btn-primary\" (click)=\"authenticateUser()\">Login</button>\n        <div class=\"alert alert-danger mt-4\" *ngIf='Status === \"failed\"'>\n          <strong>Error: </strong>{{Message}}\n        </div>\n      </form>\n    </div>\n  </div>  \n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public apiBaseUrlDev = ':3000/api/auth';\n  public apiBaseUrlProd = '/api/auth';\n  public apiBaseUrl = '';\n  public header = new HttpHeaders();\n  constructor(public httpClient: HttpClient) {\n      this.header.set('Access-Control-Allow-Origin', '*');\n      this.apiBaseUrl = environment.production ? this.apiBaseUrlProd : this.apiBaseUrlDev;\n      this.apiBaseUrl = `http://${window.location.hostname}${this.apiBaseUrl}`;\n  }\n\n  sendPostRequest(data: any): Observable<object> {\n    // generally an SSL or https connection would be used\n    return this.httpClient.post<any>(this.apiBaseUrl, data);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}